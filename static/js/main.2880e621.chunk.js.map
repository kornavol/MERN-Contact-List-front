{"version":3,"sources":["componets/Card.js","pages/Contact.js","pages/ContactForm/GetContact.js","pages/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["Card","contact","deleteContact","fullName","email","phone","address","editedContact","_id","useState","isEditable","setIsEditable","bgColor","setBgColor","editCardHandler","e","info","id","target","getAttribute","files","innerText","editCheckHandler","console","log","charCode","preventDefault","className","style","backgroundColor","data-id","onKeyPress","onBlur","contentEditable","onClick","finalForm","FormData","Object","keys","forEach","key","append","options","method","headers","localStorage","getItem","body","JSON","stringify","fetch","then","data","json","output","status","catch","err","Contacts","form","setForm","contacts","setContacts","cards","history","useHistory","fillForm","field","newForm","value","useEffect","url","process","mode","push","deleteContactHandler","response","newList","filter","alert","message","length","map","bind","onSubmit","required","placeholder","onChange","type","GetContact","attachs","single_file","multiple","props","pass","urlRegister","urlLogin","nativeEvent","submitter","result","setItem","token","name","App","path","Contact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"ySA4GeA,EAzGF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cACbC,EAAoCF,EAApCE,SAAUC,EAA0BH,EAA1BG,MAAOC,EAAmBJ,EAAnBI,MAAOC,EAAYL,EAAZK,QAC1BC,EAAgB,CAAEC,IAAKP,EAAQO,KAGrC,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAAS,SAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAOMC,EAAkB,SAACC,GACrB,IACIC,EADEC,EAAKF,EAAEG,OAAOC,aAAa,WAG7BH,EADM,QAANC,EACOF,EAAEG,OAAOE,MAAM,GAEfL,EAAEG,OAAOG,UAEpBd,EAAcU,GAAID,GAGhBM,EAAmB,SAACP,GACtBQ,QAAQC,IAAIT,GACM,IAAdA,EAAEU,UACFV,EAAEW,kBAqCV,OACI,sBAAKC,UAAU,OAAOC,MAAO,CAAEC,gBAAiBjB,GAAhD,UACI,qBACIkB,UAAQ,WACRC,WAAYT,EACZU,OAAQlB,EACRmB,gBAAiBvB,EAJrB,SAMKP,IAEL,qBACI2B,UAAQ,QACRC,WAAYT,EACZU,OAAQlB,EACRmB,gBAAiBvB,EAJrB,SAMKN,IAEL,qBACI0B,UAAQ,QACRC,WAAYT,EACZU,OAAQlB,EACRmB,gBAAiBvB,EAJrB,SAMKL,IAEL,qBACIyB,UAAQ,UACRC,WAAYT,EACZU,OAAQlB,EACRmB,gBAAiBvB,EAJrB,SAMKJ,IAEL,wBAAQ4B,QA1FG,WACfvB,GAAeD,GACfG,EAAWH,EAAa,QAAU,aAwF9B,0BACA,wBAAQwB,QApEa,WACzBX,QAAQC,IAAIjB,GAEZ,IAAI4B,EAAY,IAAIC,SAEpBC,OAAOC,KAAK/B,GAAegC,SAAQ,SAAAC,GAC/BL,EAAUM,OAAOD,EAAKjC,EAAciC,OAGxC,IACME,EAAU,CACZC,OAAQ,OACRC,QAAS,CAEL,gBAAiBC,aAAaC,QAAQ,UAE1CC,KAAMC,KAAKC,UAAUd,IAGzBe,MAVY,wCAUDR,GACNS,MAAK,SAACC,GAAD,OACFA,EAAKC,OAAOF,MAAK,SAACG,GACQ,YAAlBA,EAAOC,QACP5C,GAAc,GACdE,EAAW,UAEXA,EAAW,eAItB2C,OAAM,SAACC,GAAD,OAAS5C,EAAW,aAsC3B,0BACA,wBAAQqB,QAAShC,EAAjB,oCCwBGwD,MAxHf,WAAqB,IAAD,OAEhB,EAAwBjD,mBAAS,CAAEN,SAAU,GAAIC,MAAO,GAAIC,MAAO,GAAIC,QAAS,KAAhF,mBAAOqD,EAAP,KAAaC,EAAb,KACA,EAAgCnD,mBAAS,CAAC,CACtCD,IAAK,IACLL,SAAU,OACVC,MAAO,UACPC,MAAO,SACPC,QAAS,UALb,mBAAOuD,EAAP,KAAiBC,EAAjB,KASMlB,EAAU,CACZ,eAAgB,mBAChB,gBAAiBC,aAAaC,QAAQ,UAGtCiB,EAAQ,GAERC,EAAUC,cAGRC,EAAW,SAACnD,EAAGoD,GACjB,IAAIC,EAAO,eAAQT,GACnBS,EAAQD,GAASpD,EAAEG,OAAOmD,MAC1BT,EAAQQ,IAiBZE,qBAAU,WACN,IAAMC,EAAG,UAAMC,wBAAN,iBAMTtB,MAAMqB,EALU,CACZE,KAAM,OACN7B,YAGgBO,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAAOF,MAAK,SAAAG,GACzB,WAAjBA,EAAOC,OACPO,EAAYR,EAAOF,MAGnB7B,QAAQC,IAAI8B,WAGrB,IAEHgB,qBAAU,WACDzB,aAAaC,QAAQ,UACtBkB,EAAQU,KAAK,YAIrB,IAAMC,EAAuB,SAAC1D,GAC1B,IAAMsD,EAAM,UAAGC,wBAAH,qBAAoDvD,EAC1DyB,EAAU,CACZC,OAAQ,SACRC,WAGJrB,QAAQC,IAAI+C,GAEZrB,MAAMqB,EAAK7B,GACNS,MAAK,SAAAyB,GAAQ,OAAIA,EAASvB,OAAOF,MAAK,SAAAG,GACnC,GAAsB,YAAlBA,EAAOC,OAAsB,CAE7B,IAAIsB,EAAUhB,EAASiB,QAAO,SAAA7E,GAC1B,GAAIA,EAAQO,KAAO8C,EAAOF,KACtB,OAAOnD,KAGf6D,EAAYe,QAEZE,MAAM,2DACNxD,QAAQC,IAAI8B,EAAO0B,eAG1BxB,OAAM,SAAAC,GAASsB,MAAMtB,OAc9B,MAVyB,iBAAbI,GAAyBA,EAASoB,OAAS,IACnDlB,EAAQF,EAASqB,KAAI,SAAAjF,GAAO,OAAI,cAAC,EAAD,CAE5BA,QAASA,EACTC,cAAeyE,EAAqBQ,KAAK,EAAMlF,EAAO,MAFjDA,EAAO,SAShB,sBAAK0B,UAAU,MAAf,UACI,uBAAMA,UAAU,OAAOyD,SA7EL,SAACrE,GACvBA,EAAEW,iBACF,IAAM6C,EAAG,UAAMC,wBAAN,iBACH9B,EAAU,CACZC,OAAQ,OACRC,UAEAG,KAAMC,KAAKC,UAAUU,IAGzBT,MAAMqB,EAAK7B,GACNS,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAAOF,MAAK,SAAAG,GAAM,OAAIQ,EAAY,GAAD,mBAAKD,GAAL,CAAeP,YAkEnE,UACI,uBAAO+B,UAAQ,EAACC,YAAY,YAAYjB,MAAOV,EAAKxD,SAAUoF,SAAU,SAACxE,GAAD,OAAOmD,EAASnD,EAAG,eAC3F,uBAAOyE,KAAK,QAAQF,YAAY,QAAQjB,MAAOV,EAAKvD,MAAOmF,SAAU,SAACxE,GAAD,OAAOmD,EAASnD,EAAG,YACxF,uBAAOyE,KAAK,MAAMF,YAAY,eAAejB,MAAOV,EAAKtD,MAAOkF,SAAU,SAACxE,GAAD,OAAOmD,EAASnD,EAAG,YAC7F,uBAAOuE,YAAY,UAAUjB,MAAOV,EAAKrD,QAASiF,SAAU,SAACxE,GAAD,OAAOmD,EAASnD,EAAG,cAC/E,uDAGJ,yBAASY,UAAU,eAAnB,SACKoC,Q,QC9DF0B,G,MAzDI,WA0Cf,OACI,sBAAKxE,GAAG,cAAR,UACI,6CACA,uBAAMU,UAAU,eAAeyD,SA5CvC,SAAuBrE,GACnBA,EAAEW,iBAEF,IAAI0B,EAAO,IAAIhB,SAETsD,EAAU3E,EAAEG,OAAO,GAAGE,MAa5B,GAXAgC,EAAKX,OAAO,WAAY1B,EAAEG,OAAO,GAAGmD,OACpCjB,EAAKX,OAAO,QAAS1B,EAAEG,OAAO,GAAGmD,OACjCjB,EAAKX,OAAO,QAAS1B,EAAEG,OAAO,GAAGmD,OACjCjB,EAAKX,OAAO,UAAW1B,EAAEG,OAAO,GAAGmD,OAEnC9C,QAAQC,WAAWkE,GAMG,GAAlBA,EAAQT,OAAa,CAAC,IAAD,gBACKS,GADL,IACrB,2BAAmC,CAAC,IAAzBC,EAAwB,QAC/BvC,EAAKX,OAAO,UAAWkD,IAFN,+BAMzB,IAAMpB,EAAG,UAAMC,wBAAN,gBAMTtB,MAAMqB,EALU,CACZ5B,OAAQ,OACRI,KAAMK,IAGUD,MAAK,SAACC,GAAD,OACrBA,EAAKC,OAAOF,MAAK,SAACG,GACQ,YAAlBA,EAAOC,OACPhC,QAAQC,IAAI,WAEZD,QAAQC,IAAI8B,EAAO0B,gBAS3B,UACI,uBAAOQ,KAAK,OAAOF,YAAY,cAC/B,uBAAOE,KAAK,QAAQF,YAAY,UAChC,uBAAOE,KAAK,OAAOF,YAAY,UAC/B,0BAAUE,KAAK,OAAOF,YAAY,YAClC,uBAAOE,KAAK,OAAOI,UAAQ,IAC3B,yDChDD,G,MAAA,SAAUC,GAErB,IAAI7B,EAAUC,cAkDd,OACI,qBAAKtC,UAAU,UAAf,SACI,uBAAMyD,SAlDM,SAACrE,GACjBA,EAAEW,iBAEF,IAAI0B,EAAO,GAEXA,EAAKhD,MAAQW,EAAEG,OAAO,GAAGmD,MACzBjB,EAAK0C,KAAO/E,EAAEG,OAAO,GAAGmD,MAExB,IAAI0B,EAAW,UAAMvB,wBAAN,kBACXwB,EAAQ,UAAMxB,wBAAN,eACR9B,EAAU,CACVC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAGpBG,KAAMC,KAAKC,UAAUG,IAGS,YAA9BrC,EAAEkF,YAAYC,UAAUjF,GACxBiC,MAAM6C,EAAarD,GAASS,MAAK,SAAAgD,GAAM,OAAIA,EAAO9C,OAAOF,MAAK,SAAAG,GACrC,WAAjBA,EAAOC,OACPwB,MAAM,mDAENA,MAAMzB,EAAO0B,eAIgB,SAA9BjE,EAAEkF,YAAYC,UAAUjF,IAC/BiC,MAAM8C,EAAUtD,GACXS,MAAK,SAAAgD,GAAM,OAAIA,EAAO9C,OAClBF,MAAK,SAAAG,GACF/B,QAAQC,IAAI8B,GACS,WAAjBA,EAAOC,QACPwB,MAAMzB,EAAOC,QACbV,aAAauD,QAAQ,QAAS9C,EAAO+C,OAErCrC,EAAQU,KAAK,cAIbK,MAAMzB,EAAOC,eAS7B,UACI,uBAAO+C,KAAK,QAAQd,KAAK,UACzB,uBAAOc,KAAK,OAAOd,KAAK,aACxB,oCACI,uBAAOvE,GAAG,WAAWuE,KAAK,SAASnB,MAAM,aACzC,uBAAOpD,GAAG,QAAQuE,KAAK,SAASnB,MAAM,oBCjC3CkC,MAtBf,WACE,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YCXKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAU7C,2BAAlB,SACA,cAAC,EAAD,QAGF8C,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2880e621.chunk.js","sourcesContent":["import \"./Cards.css\";\nimport { useState } from \"react\";\n\nconst Card = ({ contact, deleteContact }) => {\n    const { fullName, email, phone, address } = contact;\n    const editedContact = { _id: contact._id };\n    //delete editedContact._id;\n\n    const [isEditable, setIsEditable] = useState(false);\n    const [bgColor, setBgColor] = useState(\"white\");\n\n    const editToggle = () => {\n        setIsEditable(!isEditable);\n        setBgColor(isEditable ? \"white\" : \"lavender\");\n    };\n\n    const editCardHandler = (e) => {\n        const id = e.target.getAttribute(\"data-id\");\n        let info;\n        if (id == 'file') {\n            info = e.target.files[0];\n        } else {\n            info = e.target.innerText;\n        }\n        editedContact[id]=info;\n    };\n\n    const editCheckHandler = (e) => {\n        console.log(e);\n        if (e.charCode == 13) {\n            e.preventDefault();\n        }\n    };\n\n    const updateContactHandler = () => {\n        console.log(editedContact);\n\n        let finalForm = new FormData();\n\n        Object.keys(editedContact).forEach(key => {\n            finalForm.append(key, editedContact[key]) \n        })\n\n        const url = \"http://localhost:8080/contacts/update\";\n        const options = {\n            method: \"POST\",\n            headers: {\n                // \"Content-Type\": \"application/json\",\n                \"x-auth-tocken\": localStorage.getItem(\"token\"),\n            },\n            body: JSON.stringify(finalForm),\n        };\n\n        fetch(url, options)\n            .then((data) =>\n                data.json().then((output) => {\n                    if (output.status === \"success\") {\n                        setIsEditable(false);\n                        setBgColor(\"green\");\n                    } else {\n                        setBgColor(\"coral\");\n                    }\n                })\n            )\n            .catch((err) => setBgColor(\"coral\"));\n    };\n\n    return (\n        <div className=\"card\" style={{ backgroundColor: bgColor }}>\n            <div\n                data-id=\"fullName\"\n                onKeyPress={editCheckHandler}\n                onBlur={editCardHandler}\n                contentEditable={isEditable}\n            >\n                {fullName}\n            </div>\n            <div\n                data-id=\"email\"\n                onKeyPress={editCheckHandler}\n                onBlur={editCardHandler}\n                contentEditable={isEditable}\n            >\n                {email}\n            </div>\n            <div\n                data-id=\"phone\"\n                onKeyPress={editCheckHandler}\n                onBlur={editCardHandler}\n                contentEditable={isEditable}\n            >\n                {phone}\n            </div>\n            <div\n                data-id=\"address\"\n                onKeyPress={editCheckHandler}\n                onBlur={editCardHandler}\n                contentEditable={isEditable}\n            >\n                {address}\n            </div>\n            <button onClick={editToggle}>✏️</button>\n            <button onClick={updateContactHandler}>💾</button>\n            <button onClick={deleteContact}>🗑️</button>\n        </div>\n    );\n};\n\nexport default Card;\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nimport Card from \"../componets/Card\"\r\n\r\nfunction Contacts() {\r\n\r\n    const [form, setForm] = useState({ fullName: '', email: '', phone: '', address: '' });\r\n    const [contacts, setContacts] = useState([{\r\n        _id: '1',\r\n        fullName: 'test',\r\n        email: 't@t.com',\r\n        phone: '123456',\r\n        address: 'test'\r\n    }\r\n    ]);\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-tocken': localStorage.getItem('token')\r\n    }\r\n\r\n    let cards = [];\r\n    \r\n    let history = useHistory();\r\n\r\n\r\n    const fillForm = (e, field) => {\r\n        let newForm = { ...form };\r\n        newForm[field] = e.target.value;\r\n        setForm(newForm);\r\n    }\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const url = `${process.env.REACT_APP_ROUTE}/contacts/new`;\r\n        const options = {\r\n            method: 'POST',\r\n            headers,\r\n            // mode: \"no-cors\",  /*  crached my app. Why?? Maybe becouse od post method */\r\n            body: JSON.stringify(form)\r\n        }\r\n\r\n        fetch(url, options)\r\n            .then(data => data.json().then(output => setContacts([...contacts, output])));\r\n    }\r\n\r\n    useEffect(() => {\r\n        const url = `${process.env.REACT_APP_ROUTE}/contacts/all`;\r\n        const options = {\r\n            mode: 'cors',\r\n            headers\r\n        }\r\n\r\n        fetch(url, options).then(data => data.json().then(output => {\r\n            if (output.status == 'success') {\r\n                setContacts(output.data);\r\n            } else {\r\n                // alert('Failed. Check console')\r\n                console.log(output);\r\n            }            \r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            history.push('/auth')\r\n        }\r\n    },);\r\n\r\n    const deleteContactHandler = (id) => {\r\n        const url = `${process.env.REACT_APP_ROUTE}/contacts/delete/` + id;\r\n        const options = {\r\n            method: 'DELETE',\r\n            headers\r\n        }\r\n\r\n        console.log(url);\r\n\r\n        fetch(url, options)\r\n            .then(response => response.json().then(output => {\r\n                if (output.status === 'success') {\r\n                    // alert(output.message);\r\n                    let newList = contacts.filter(contact => {\r\n                        if (contact._id != output.data) {\r\n                            return contact;\r\n                        }\r\n                    });\r\n                    setContacts(newList);\r\n                } else {\r\n                    alert(`There's an error. For details please check the console.`);\r\n                    console.log(output.message);\r\n                }\r\n            }))\r\n            .catch(err => { alert(err) });\r\n    }\r\n\r\n\r\n    if (typeof (contacts) == 'object' && contacts.length > 0) {\r\n        cards = contacts.map(contact => <Card\r\n            key={contact['_id']}\r\n            contact={contact}\r\n            deleteContact={deleteContactHandler.bind(this, contact['_id'])}\r\n        />)\r\n    }\r\n\r\n\r\n    /* console.log(cards, contacts) */\r\n    return (\r\n        <div className=\"App\">\r\n            <form className=\"form\" onSubmit={formSubmitHandler}>\r\n                <input required placeholder=\"Full name\" value={form.fullName} onChange={(e) => fillForm(e, 'fullName')} />\r\n                <input type=\"email\" placeholder=\"Email\" value={form.email} onChange={(e) => fillForm(e, 'email')} />\r\n                <input type=\"tel\" placeholder=\"Phone number\" value={form.phone} onChange={(e) => fillForm(e, 'phone')} />\r\n                <input placeholder=\"Address\" value={form.address} onChange={(e) => fillForm(e, 'address')} />\r\n                <button>Create Contact</button>\r\n            </form>\r\n\r\n            <section className=\"contact-list\">\r\n                {cards}\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contacts;\r\n","import \"./ContactForm.css\";\r\n\r\nconst GetContact = () => {\r\n    function SubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        let data = new FormData();\r\n\r\n        const attachs = e.target[4].files;\r\n\r\n        data.append(\"fullName\", e.target[0].value);\r\n        data.append(\"email\", e.target[1].value);\r\n        data.append(\"phone\", e.target[2].value);\r\n        data.append(\"message\", e.target[3].value);\r\n\r\n        console.log(typeof attachs);\r\n\r\n        /* Because we couldn't send all files into an array. We need to append each file separately \r\n            with  THE SAME KEY.\r\n            For this, we have to use \"forin\" loop because type of variable is an object (forEach working only with array) \r\n        */\r\n        if (attachs.length != 0) {\r\n            for (const single_file of attachs) {\r\n                data.append(\"attachs\", single_file);\r\n            }\r\n        }\r\n\r\n        const url = `${process.env.REACT_APP_ROUTE}/get-contact`; //?\r\n        const options = {\r\n            method: \"POST\",\r\n            body: data,\r\n        };\r\n\r\n        fetch(url, options).then((data) =>\r\n            data.json().then((output) => {\r\n                if (output.status === \"success\") {\r\n                    console.log(\"Congats\");\r\n                } else {\r\n                    console.log(output.message);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div id=\"get-contact\">\r\n            <h1>Get Contact</h1>\r\n            <form className=\"contact-form\" onSubmit={SubmitHandler}>\r\n                <input type=\"text\" placeholder=\"Full Name\" />\r\n                <input type=\"email\" placeholder=\"Email\" />\r\n                <input type=\"text\" placeholder=\"Phone\" />\r\n                <textarea type=\"text\" placeholder=\"Message\" />\r\n                <input type=\"file\" multiple />\r\n                <button>Get Contact</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GetContact;\r\n","import './Auth.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function (props) {\r\n\r\n    let history = useHistory();\r\n\r\n    let submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = {};\r\n\r\n        data.email = e.target[0].value;\r\n        data.pass = e.target[1].value;\r\n\r\n        let urlRegister = `${process.env.REACT_APP_ROUTE}/auth/register`;\r\n        let urlLogin = `${process.env.REACT_APP_ROUTE}/auth/login`;\r\n        let options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n\r\n        if (e.nativeEvent.submitter.id == \"register\") {\r\n            fetch(urlRegister, options).then(result => result.json().then(output => {\r\n                if (output.status == 'success') {\r\n                    alert('Congrats, you registered as well! Please login.')\r\n                } else {\r\n                    alert(output.message)\r\n                }\r\n                // console.log(output);\r\n            }));\r\n        } else if (e.nativeEvent.submitter.id == \"login\") {\r\n            fetch(urlLogin, options)\r\n                .then(result => result.json()\r\n                    .then(output => {\r\n                        console.log(output);\r\n                        if (output.status == 'success') {\r\n                            alert(output.status)\r\n                            localStorage.setItem('token', output.token);\r\n\r\n                            history.push(\"/contacts\");\r\n\r\n                            // props.setIsLoggedIn(true);\r\n                        } else {\r\n                            alert(output.status)\r\n                            // localStorage.removeItem('token');\r\n                        }\r\n                    }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <form onSubmit={submitHandler}>\r\n                <input name=\"email\" type=\"email\" />\r\n                <input name=\"pass\" type=\"password\" />\r\n                <section>\r\n                    <input id=\"register\" type=\"submit\" value=\"Register\" />\r\n                    <input id=\"login\" type=\"submit\" value=\"Login\" />\r\n                </section>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import './App.css';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Contacts from \"./pages/Contact\"\nimport GetContacts from \"./pages/ContactForm/GetContact\"\nimport Auth from \"./pages/Auth\"\n\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Route path=\"/contacts\">\n          <Contacts />\n        </Route>\n        <Route path=\"/get-contacts\">\n          <GetContacts />\n        </Route>\n        <Route path=\"/\">\n          <Auth />\n        </Route>\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}